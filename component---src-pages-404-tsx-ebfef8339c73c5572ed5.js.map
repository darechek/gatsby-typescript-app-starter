{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/SEO/index.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Layout/Header/index.tsx","webpack:///./src/components/ui/FontIcon/index.tsx","webpack:///./src/components/LanguageSelector/index.tsx","webpack:///./src/components/Layout/Footer/index.tsx","webpack:///./src/components/Layout/index.tsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_intl__WEBPACK_IMPORTED_MODULE_1__","components_Layout__WEBPACK_IMPORTED_MODULE_2__","components_SEO__WEBPACK_IMPORTED_MODULE_3__","NotFoundPage","a","createElement","id","defaultMessage","text","title","m","module","exports","require","default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","loader","enqueue","React","createContext","SEO","_ref","description","lang","meta","site","_public_static_d_2709607644_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","baseMeta","name","content","property","author","react__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","concat","defaultProps","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","Header","_ref$siteTitle","siteTitle","react","className","gatsby_browser_entry","to","FontIcon","otherProps","_objectWithoutPropertiesLoose","classes","cn","translations","defineMessages","en","es","pt","injectIntl","intl","_ref$label","label","index_es","dispatch","useDispatch","locale","useSelector","selectLocale","value","onChange","event","changeLanguage","target","keys","map","key","index","formatMessage","Footer","Date","getFullYear","href","ui_FontIcon","components_LanguageSelector","Layout","children","_ref$displayFooter","displayFooter","_3821914999","Layout_Header","Layout_Footer"],"mappings":"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","file":"component---src-pages-404-tsx-ebfef8339c73c5572ed5.js","sourcesContent":["import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\n\nconst NotFoundPage = () => (\n\t<Layout>\n\t\t<FormattedMessage id=\"404.title\" defaultMessage=\"404: Not found\">\n\t\t\t{text => <SEO title={text as string} />}\n\t\t</FormattedMessage>\n\t\t<h1>\n\t\t\t<FormattedMessage id=\"404.title\" defaultMessage=\"404: Not found\" />\n\t\t</h1>\n\t\t<p>\n\t\t\t<FormattedMessage\n\t\t\t\tid=\"404.message\"\n\t\t\t\tdefaultMessage=\"You just hit a route that doesn&#39;t exist... the sadness.\"\n\t\t\t/>\n\t\t</p>\n\t</Layout>\n);\n\nexport default NotFoundPage;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\ntype TMetaProps = JSX.IntrinsicElements['meta'];\n\ninterface ISEO {\n\ttitle: string;\n\tdescription?: string;\n\tlang?: string;\n\tmeta?: TMetaProps[];\n}\n\nconst SEO: React.FunctionComponent<ISEO> = ({ description, lang, meta, title }) => {\n\tconst { site } = useStaticQuery(\n\t\tgraphql`\n\t\t\tquery {\n\t\t\t\tsite {\n\t\t\t\t\tsiteMetadata {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tdescription\n\t\t\t\t\t\tauthor\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t`\n\t);\n\n\tconst metaDescription = description || site.siteMetadata.description;\n\n\tconst baseMeta: TMetaProps[] = [\n\t\t{\n\t\t\tname: `description`,\n\t\t\tcontent: metaDescription,\n\t\t},\n\t\t{\n\t\t\tproperty: `og:title`,\n\t\t\tcontent: title,\n\t\t},\n\t\t{\n\t\t\tproperty: `og:description`,\n\t\t\tcontent: metaDescription,\n\t\t},\n\t\t{\n\t\t\tproperty: `og:type`,\n\t\t\tcontent: `website`,\n\t\t},\n\t\t{\n\t\t\tname: `twitter:card`,\n\t\t\tcontent: `summary`,\n\t\t},\n\t\t{\n\t\t\tname: `twitter:creator`,\n\t\t\tcontent: site.siteMetadata.author,\n\t\t},\n\t\t{\n\t\t\tname: `twitter:title`,\n\t\t\tcontent: title,\n\t\t},\n\t\t{\n\t\t\tname: `twitter:description`,\n\t\t\tcontent: metaDescription,\n\t\t},\n\t];\n\n\treturn (\n\t\t<Helmet\n\t\t\thtmlAttributes={{\n\t\t\t\tlang,\n\t\t\t}}\n\t\t\ttitle={title}\n\t\t\ttitleTemplate={`%s | ${site.siteMetadata.title}`}\n\t\t\tmeta={baseMeta.concat(meta!)}\n\t\t/>\n\t);\n};\n\nSEO.defaultProps = {\n\tlang: `en`,\n\tmeta: [] as TMetaProps[],\n\tdescription: ``,\n};\n\nexport default SEO;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from 'react';\nimport { Link } from 'gatsby';\n\nimport './_styles.scss';\n\ninterface IHeader {\n\tsiteTitle: string;\n}\n\nconst Header: React.FunctionComponent<IHeader> = ({ siteTitle = '' }) => (\n\t<div className=\"layoutheader\">\n\t\t<div className=\"layoutheader__content\">\n\t\t\t<div className=\"layoutheader__title\">\n\t\t\t\t<Link to=\"/\" className=\"layoutheader__link\">\n\t\t\t\t\t{siteTitle}\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n);\n\nexport default Header;\n","import * as React from 'react';\nimport cn from 'classnames';\n\nexport interface IFontIconProps {\n\tname: string;\n\tclassName?: string | string[];\n\ttitle?: string;\n\tonClick?: React.MouseEventHandler<HTMLElement>;\n}\n\nconst FontIcon: React.FunctionComponent<IFontIconProps> = ({ name, className, ...otherProps }) => {\n\tconst classes = cn(`icon icon-${name}_icon`, className);\n\treturn <i className={classes} {...otherProps}></i>;\n};\n\nexport default FontIcon;\n","import * as React from 'react';\nimport cn from 'classnames';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FormattedMessage, defineMessages, injectIntl, InjectedIntlProps } from 'react-intl';\nimport { changeLanguage } from 'store/state/language/operations';\nimport { selectLocale } from 'store/state/language/selectors';\n\nimport './_styles.scss';\n\nconst translations = defineMessages({\n\ten: { id: 'language.selector.option.english', defaultMessage: 'English' },\n\tes: { id: 'language.selector.option.spanish', defaultMessage: 'Spanish' },\n\tpt: { id: 'language.selector.option.portuguese', defaultMessage: 'Portuguese' },\n});\n\ninterface ILanguageSelectorProps extends InjectedIntlProps {\n\tclassName?: string;\n\tlabel?: React.ReactNode;\n}\n\nconst LanguageSelector: React.FunctionComponent<ILanguageSelectorProps> = ({\n\tintl,\n\tclassName,\n\tlabel = <FormattedMessage id=\"language.selector.label\" defaultMessage=\"Select another available language\" />,\n}) => {\n\tconst dispatch = useDispatch();\n\tconst locale = useSelector(selectLocale);\n\n\tconst handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tdispatch(changeLanguage(event.target.value));\n\t};\n\n\treturn (\n\t\t<div className={cn('languageselector', className)}>\n\t\t\t{label && <div className=\"languageselector__label\">{label}</div>}\n\t\t\t<div className=\"languageselector__selectcontainer\">\n\t\t\t\t<select value={locale} onChange={handleChange} className=\"languageselector__select\">\n\t\t\t\t\t{Object.keys(translations).map((key, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<option key={index} value={key}>\n\t\t\t\t\t\t\t\t{intl.formatMessage((translations as any)[key])}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t\t}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default injectIntl(LanguageSelector);\n","import * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FontIcon from 'components/ui/FontIcon';\nimport LanguageSelector from 'components/LanguageSelector';\n\nimport './_styles.scss';\n\nconst Footer: React.FunctionComponent = () => (\n\t<div className=\"layoutfooter\">\n\t\t<div className=\"layoutfooter__content\">\n\t\t\t<div>\n\t\t\t\t© {new Date().getFullYear()}, <FormattedMessage id=\"layout.build-with\" defaultMessage=\"Built with\" />\n\t\t\t\t{` `}\n\t\t\t\t<a href=\"https://www.gatsbyjs.org\">\n\t\t\t\t\tGatsby <FontIcon name=\"heart\" />\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t\t<LanguageSelector />\n\t\t</div>\n\t</div>\n);\n\nexport default Footer;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Header from './Header';\nimport Footer from './Footer';\n\nimport './_styles.scss';\n\ninterface ILayout {\n\tchildren: React.ReactNode;\n\tdisplayFooter?: boolean;\n}\n\nconst Layout: React.FunctionComponent<ILayout> = ({ children, displayFooter = true }) => {\n\tconst data = useStaticQuery(graphql`\n\t\tquery SiteTitleQuery {\n\t\t\tsite {\n\t\t\t\tsiteMetadata {\n\t\t\t\t\ttitle\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`);\n\n\treturn (\n\t\t<div className=\"layout\">\n\t\t\t<Header siteTitle={data.site.siteMetadata.title} />\n\t\t\t<div className=\"layout__content\">{children}</div>\n\t\t\t{displayFooter && <Footer />}\n\t\t</div>\n\t);\n};\n\nexport default Layout;\n"],"sourceRoot":""}